akka {
  # Put the following in your conf/logback.xml file:
  # <logger name="akka.actor" level="INFO" />
  # Uncomment
  #log-config-on-start = true
}

play.crypto.secret = "72kbh:FgMo@H9gVmSEIRq2PF=J18]PrA]L8QDqmDeSi;;Ckd9D=Ro=qvOB>dp44r"

play.modules {
  #enabled += my.application.Module
  #disabled += ""
}

# Make use of the IntelliJ IDEA REST interface:
play.editor="http://localhost:63342/api/file/?file=%s&line=%s"

## Internationalisation
# https://www.playframework.com/documentation/latest/JavaI18N

play.i18n {
  # The application languages
  langs = [ "en" ]

  # Whether the language cookie should be secure or not
  #langCookieSecure = true

  # Whether the HTTP only attribute of the cookie should be set to true
  #langCookieHttpOnly = true
}

play.http {
  ## Router
  # https://www.playframework.com/documentation/latest/JavaRouting
  #router = my.application.Router

  # https://www.playframework.com/documentation/latest/JavaActionCreator
  #actionCreator = null

  ## ErrorHandler
  # If null, will attempt to load a class called ErrorHandler in the root package,
  #errorHandler = null

  ## Filters
  # https://www.playframework.com/documentation/latest/JavaHttpFilters
  #filters = my.application.Filters

  ## Session & Flash
  # https://www.playframework.com/documentation/latest/JavaSessionFlash
  session {
    # Sets the cookie to be sent only over HTTPS.
    #secure = true

    # Sets the cookie to be accessed only by the server.
    #httpOnly = true

    # Sets the max-age field of the cookie to 5 minutes.
    #maxAge = 300

    # Sets the domain on the session cookie.
    #domain = "example.com"
  }

  flash {
    # Sets the cookie to be sent only over HTTPS.
    #secure = true

    # Sets the cookie to be accessed only by the server.
    #httpOnly = true
  }
}

# https://www.playframework.com/documentation/latest/SettingsNetty
play.server.netty {
  #log.wire = true

  # You can use Netty's native socket transport for higher performance with less garbage.
  transport = "native"
}




## Evolutions
# https://www.playframework.com/documentation/latest/Evolutions
# ~~~~~
# Evolutions allows database scripts to be automatically run on startup in dev mode
# for database migrations. You must enable this by adding to build.sbt:
#
# libraryDependencies += evolutions
#
play.evolutions {
  # You can disable evolutions for a specific datasource if necessary
  #db.default.enabled = false
}

## Database Connection Pool
# https://www.playframework.com/documentation/latest/SettingsJDBC
# ~~~~~
# Play doesn't require a JDBC database to run, but you can easily enable one.
#
# libraryDependencies += jdbc
#
play.db {
  # default JDBC pool:
  #config = "db"
  #default = "default"

  prototype {
    # Sets a fixed JDBC connection pool size of 50
    #hikaricp.minimumIdle = 50
    #hikaricp.maximumPoolSize = 50
  }
}

db {
  #default.driver = org.h2.Driver
  #default.url = "jdbc:h2:mem:play"
  #default.username = sa
  #default.password = ""

  # https://www.playframework.com/documentation/latest/Highlights25#Logging-SQL-statements
  default.logSql=true
}

include "gardener.dev.conf"